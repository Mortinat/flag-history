version: '3.7'

services:
  python_total:
    build: 
      context: ./
      dockerfile: Dockerfile.total
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - private
    restart: unless-stopped
  python_history:
    build: 
      context: ./
      dockerfile: Dockerfile.history
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - private
    restart: unless-stopped
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    networks:
      - private
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"
      - "GF_SERVER_ROOT_URL=https://grafana.teamna.me:443"
      - "GF_SERVER_DOMAIN=grafana.teamna.me"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana_teamname.entrypoints=http"
      - "traefik.http.routers.grafana_teamname.rule=Host(`grafana.teamna.me`)"
      - "traefik.http.middlewares.grafana_teamname-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana_teamname.middlewares=grafana_teamname-https-redirect"
      - "traefik.http.routers.grafana_teamname-secure.entrypoints=https"
      - "traefik.http.routers.grafana_teamname-secure.rule=Host(`grafana.teamna.me`)"
      - "traefik.http.routers.grafana_teamname-secure.tls=true"
      - "traefik.http.routers.grafana_teamname-secure.tls.certresolver=http"
      - "traefik.http.routers.grafana_teamname-secure.service=grafana-flag-history@docker"
      - "traefik.docker.network=traefik-proxy"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - traefik-proxy
      - private

networks:
  traefik-proxy:
    external: true
  private:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
  grafana-storage:
    
